 
using System; 
using System.Linq;
using System.Collections.Generic;
    /// <summary>
    /// 
    /// </summary>
    public class %H%Repository : BaseRepository<%H%, %H%Model, %T%>
    {
        /// <summary>
        /// 
        /// </summary>n
        public %H%Repository()
        {
        }
        /// <summary>
        /// IQueryable %H% Entity Search
        /// </summary>
        %D%/// <param name='sort'></param>
        /// <returns></returns>
        public IEnumerable<%H%> Search(%P%, string sort = 'Id')
        {
            var sql = ' where Id > 0 ';
            var c = 0;

            %F1%
            
            
            sql += ApplySort(sort);
            return Query(sql).AsEnumerable(); 
        }

        /// <summary>
        /// Paged %H% Model Search
        /// </summary>
        %D%/// <param name='page'></param>
        ///<param name='pageSize'></param>
        ///<param name='sort'></param>
        /// <returns></returns>
        public Page<%H%Model> SearchView(%P%,
            long page = 1, long pageSize = 10, string sort = 'Id')
        {
            var sql = ' where Id > 0 ';
            var c = 0;

            %F1%

            
            sql += ApplySort(sort);
            if (page <= 0) return QueryView(sql);   
            return PagedView(sql, page, pageSize);
        }

    
 
        /// <summary>
        /// check exists
        /// </summary>
        /// <param name='model'></param>
        /// <param name='Id'></param>
        /// <returns></returns>
        public bool ItemExists(%H%Model model, %T% Id = 0)
        {
            var check = SearchView(%M%).Items.AsEnumerable();
            if (Id > 0)
            {
                check = check.Where(x => x.Id != Id);
            }
            return check.Any();
        }
    }